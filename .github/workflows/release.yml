name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.0'  # 必要に応じてGoのバージョンを変更

      - name: Build
        run: go build -o ppv.exe

      - name: Install Inno Setup
        run: choco install innosetup

      - name: Verify Inno Setup Installation
        shell: pwsh
        run: |
          if (Test-Path "C:\Program Files (x86)\Inno Setup 6\ISCC.exe") {
            Write-Output "ISCC.exe exists."
          } else {
            Write-Error "ISCC.exe does not exist."
          }

      - name: Create Installer
        shell: pwsh
        run: |
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" installer.iss

      - name: List files after Create Installer
        run: |
          echo "Listing files in the current directory after Create Installer:"
          ls -la
          echo "Listing all files recursively:"
          ls -R

      - name: Verify Installer Exists
        shell: pwsh
        run: |
          if (Test-Path ./pypi-versions-setup.exe) {
            Write-Output "Installer exists."
            Get-ChildItem -Path . -Filter pypi-versions-setup.exe
          } else {
            Write-Error "Installer pypi-versions-setup.exe does not exist."
          }

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: installer
          path: ./pypi-versions-setup.exe  # Listステップで確認したパスに合わせて調整

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: installer

      - name: List downloaded artifacts
        run: |
          echo "Listing files in the current directory:"
          ls -la
          echo "Listing files in the 'installer' directory (if exists):"
          if [ -d "./installer" ]; then ls -la ./installer; fi

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          files: installer/pypi-versions-setup.exe  # Listステップの出力に基づき調整